type User {
  id: ID! @id
  avatar: String
  username: String! @unique
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String
  bio: String
  followers: [User!]! @relation(name: "FollowRelation")
  following: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]!  @relation(name:"PostsUserRelation" onDelete: CASCADE)
  likes: [Like!]! @relation(name:"LikesUserRelation" onDelete: CASCADE)
  comments: [Comment!]! @relation(name:"CommentsUserRelation" onDelete: CASCADE)
  rooms: [Room!]! 
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}


type Post {
  id: ID! @id
  location: String
  caption: String!
  user: User @relation(name:"PostsUserRelation")
  files: [File!]! @relation(name: "FilesPostRelation" onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesPostRelation" onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsPostRelation" onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  user: User @relation(name:"LikesUserRelation")
  post: Post @relation(name: "LikesPostRelation")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name:"CommentsUserRelation")
  post: Post @relation(name: "CommentsPostRelation")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesPostRelation")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  participants: [User!]!
  message: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}